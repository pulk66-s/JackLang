"Program": {
"zero_or_more": {
"FunctionDecl": {
"sequence": {
"Type": {
"isAlpha": "i",
"isAlpha": "n",
"isAlpha": "t",
"isAlpha": "f",
"type": "int",
"end": "success"},
"expr 0": "success",
"Identifier": {
"isAlpha": "f",
"isAlpha": "n",
"isAlpha": "(",
"identifier": "fn",
"end": "success"},
"expr 1": "success",
"SpecialChar": {
"char": "(",
"end": "success"},
"expr 2": "success",
"SpecialChar": {
"char": ")",
"end": "success"},
"expr 3": "success",
"SpecialChar": {
"char": "{",
"end": "success"},
"expr 4": "success",
"FunctionLines": {
"zero_or_more": {
"FunctionLine": {
"ordered_choice": {
"Statement": {
"ordered_choice": {
"VariableDecl": {
"start_cursor": "0 1 1",
"sequence": {
"Type": {
"isAlpha": "i",
"isAlpha": "f",
"isAlpha": "(",
"type": "if",
"end": "success"},
"expr 0": "success",
"Identifier": {
"isAlpha": "(",
"message": "no identifier detected",
"end": "fail"},
"end": "fail expr 1"},
"end": "fail"},
"expr 0": "fail",
"end": "fail"},
"SpecialChar": {
"character char": "i != ;",
"message": "no special character detected",
"end": "fail"},
"message": "Choice is null",
"end": "fail"},
"expr 0": "fail",
"Condition": {
"sequence": {
"If": {
"sequence": {
"if": {
"message": "Parsed If keyword",
"end": "success"},
"expr 0": "success",
"SpecialChar": {
"char": "(",
"end": "success"},
"expr 1": "success",
"MaybeValue": {
"zero_or_one": {
"Value": {
"ordered_choice": {
"Number": {
"end": "fail",
"reason": "Number is null"},
"expr 0": "fail",
"end": "fail"},
"end": "fail",},
"expr 0": "fail",
"end": "success"},
"end": "success"},
"expr 2": "success",
"SpecialChar": {
"char": ")",
"end": "success"},
"expr 3": "success",
"Body": {
"sequence": {
"SpecialChar": {
"char": "{",
"end": "success"},
"expr 0": "success",
"FunctionLines": {
"zero_or_more": {
"FunctionLine": {
"ordered_choice": {
"Statement": {
"ordered_choice": {
"VariableDecl": {
"start_cursor": "2 2 1",
"sequence": {
"Type": {
"isAlpha": "}",
"message": "no type detected",
"end": "fail"},
"end": "fail expr 0"},
"end": "fail"},
"expr 0": "fail",
"end": "fail"},
"SpecialChar": {
"character char": "} != ;",
"message": "no special character detected",
"end": "fail"},
"message": "Choice is null",
"end": "fail"},
"expr 0": "fail",
"Condition": {
"sequence": {
"If": {
"sequence": {
"if": {
"message": "Failed to parse if keyword",
"end": "fail"},
"end": "fail expr 0"},
"end": "fail",},
"end": "fail expr 0"},
"end": "fail"},
"expr 1": "fail",
"end": "fail"},
"message": "Choice is null",
"end": "fail"},
"expr 0": "fail",
"end": "success"},
"size": 0,
"end": "success"},
"expr 1": "success",
"SpecialChar": {
"char": "}",
"end": "success"},
"expr 2": "success",
"end": "success"},
"end": "success"},
"expr 4": "success",
"end": "success"},
"end": "success",},
"expr 0": "success",
"MaybeElse": {
"zero_or_one": {
"Else": {
"sequence": {
"else": {
"message": "Failed to parse else keyword",
"end": "fail"},
"end": "fail expr 0"},
"end": "fail"},
"expr 0": "fail",
"end": "success"},
"message": "no else",
"end": "success"},
"expr 1": "success",
"end": "success"},
"message": "else doesn't exists",
"end": "success"},
"expr 1": "success"},
"message": "Choice is 8",
"end": "success"},
"expr 0": "success",
"FunctionLine": {
"ordered_choice": {
"Statement": {
"ordered_choice": {
"VariableDecl": {
"start_cursor": "0 4 1",
"sequence": {
"Type": {
"isAlpha": "}",
"message": "no type detected",
"end": "fail"},
"end": "fail expr 0"},
"end": "fail"},
"expr 0": "fail",
"end": "fail"},
"SpecialChar": {
"character char": "} != ;",
"message": "no special character detected",
"end": "fail"},
"message": "Choice is null",
"end": "fail"},
"expr 0": "fail",
"Condition": {
"sequence": {
"If": {
"sequence": {
"if": {
"message": "Failed to parse if keyword",
"end": "fail"},
"end": "fail expr 0"},
"end": "fail",},
"end": "fail expr 0"},
"end": "fail"},
"expr 1": "fail",
"end": "fail"},
"message": "Choice is null",
"end": "fail"},
"expr 1": "fail",
"end": "success"},
"line": 8,
"size": 1,
"end": "success"},
"expr 5": "success",
"SpecialChar": {
"char": "}",
"end": "success"},
"expr 6": "success",
"end": "success"},
"line": 8
"type": "int",
"identifier": "fn",
"nb_lines": 1,
"end": "success"},
"expr 0": "success",
"FunctionDecl": {
"sequence": {
"Type": {
"isAlpha": ""message": "no type detected",
"end": "fail"},
"end": "fail expr 0"},
"message": "Sequence is null",
"end": "fail"},
"expr 1": "fail",
"end": "success"},
"end": "success"},
