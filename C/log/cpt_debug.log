function_decl
type
alpha_word
alpha_word: int
type: int
identifier
identifier: count_10
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
condition
if_condition
if_keyword
alpha_word
alpha_word: int
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: int
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: int
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: int
Error: return statement expected
variable_declaration
type
alpha_word
alpha_word: int
type: int
identifier
identifier: a
comparison
number
number: 0
comparison_op
buf[0] = ';'
buf[1] = 'f'
comparison_op: compare ";f" with "=="
comparison_op: compare ";f" with "!="
comparison_op: compare ";f" with ">"
comparison_op: compare ";f" with "<"
comparison_op: compare ";f" with ">="
comparison_op: compare ";f" with "<="
comparison_op: failed, operator=";f"
comparison: failed
operation
number
number: 0
Error: left operand expected 3
number
number: 0
variable declaration after sequence
res size: 4
variable decl, type: 11, identifier: 3, value: 1
condition
if_condition
if_keyword
alpha_word
alpha_word: for
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: for
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: for
for_keyword success
for_init
comparison
number
Error: number expected
identifier
identifier: a
comparison_op
buf[0] = '<'
comparison_op: compare "<" with "=="
comparison_op: compare "<" with "!="
comparison_op: compare "<" with ">"
comparison_op: compare "<" with "<"
comparison_op: success
comparison
number
number: 10
comparison_op
buf[0] = ';'
buf[1] = 'a'
comparison_op: compare ";a" with "=="
comparison_op: compare ";a" with "!="
comparison_op: compare ";a" with ">"
comparison_op: compare ";a" with "<"
comparison_op: compare ";a" with ">="
comparison_op: compare ";a" with "<="
comparison_op: failed, operator=";a"
comparison: failed
operation
number
number: 10
Error: left operand expected 3
number
number: 10
comparison: success <
for_init success
for_cond
comparison
number
Error: number expected
identifier
identifier: a
comparison_op
buf[0] = '%'
buf[1] = '2'
comparison_op: compare "%2" with "=="
comparison_op: compare "%2" with "!="
comparison_op: compare "%2" with ">"
comparison_op: compare "%2" with "<"
comparison_op: compare "%2" with ">="
comparison_op: compare "%2" with "<="
comparison_op: failed, operator="%2"
comparison: failed
operation
number
Error: number expected
identifier
identifier: a
comparison
number
number: 2
comparison_op
buf[0] = ';'
buf[1] = 'a'
comparison_op: compare ";a" with "=="
comparison_op: compare ";a" with "!="
comparison_op: compare ";a" with ">"
comparison_op: compare ";a" with "<"
comparison_op: compare ";a" with ">="
comparison_op: compare ";a" with "<="
comparison_op: failed, operator=";a"
comparison: failed
operation
number
number: 2
Error: left operand expected 3
number
number: 2
operation: %
for_cond success
for_iter
comparison
number
Error: number expected
identifier
identifier: a
comparison_op
buf[0] = '+'
buf[1] = '1'
comparison_op: compare "+1" with "=="
comparison_op: compare "+1" with "!="
comparison_op: compare "+1" with ">"
comparison_op: compare "+1" with "<"
comparison_op: compare "+1" with ">="
comparison_op: compare "+1" with "<="
comparison_op: failed, operator="+1"
comparison: failed
operation
number
Error: number expected
identifier
identifier: a
comparison
number
number: 1
comparison_op
buf[0] = ')'
buf[1] = '{'
comparison_op: compare "){" with "=="
comparison_op: compare "){" with "!="
comparison_op: compare "){" with ">"
comparison_op: compare "){" with "<"
comparison_op: compare "){" with ">="
comparison_op: compare "){" with "<="
comparison_op: failed, operator="){"
comparison: failed
operation
number
number: 1
Error: left operand expected 3
number
number: 1
operation: +
for_iter success
for_body
ret
alpha_word
alpha_word: 
Error: return statement expected
variable_declaration
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
variable declaration after sequence
variable_declaration: NULL
for_body success
for_loop success
loop success
condition
if_condition
if_keyword
alpha_word
alpha_word: return
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: return
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: return
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: return
comparison
number
number: 1
comparison_op
buf[0] = ';'
buf[1] = '}'
comparison_op: compare ";}" with "=="
comparison_op: compare ";}" with "!="
comparison_op: compare ";}" with ">"
comparison_op: compare ";}" with "<"
comparison_op: compare ";}" with ">="
comparison_op: compare ";}" with "<="
comparison_op: failed, operator=";}"
comparison: failed
operation
number
number: 1
Error: left operand expected 3
number
number: 1
condition
if_condition
if_keyword
alpha_word
alpha_word: 
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: 
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: 
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: 
Error: return statement expected
variable_declaration
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
variable declaration after sequence
variable_declaration: NULL
function_decl success: count_10
