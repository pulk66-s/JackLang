function_decl
type
alpha_word
alpha_word: int
type: int
identifier
identifier: isEven
type
alpha_word
alpha_word: int
type: int
identifier
identifier: n
type
alpha_word
alpha_word: int
type: int
identifier
identifier: n
condition
if_condition
if_keyword
alpha_word
alpha_word: if
if_keyword: is if
cond_value
comparison
function_call
cursor: 1 1 1
identifier
identifier: n
function_call: NULL
number
Error: number expected
identifier
identifier: n
comparison_op
buf[0] = '%'
buf[1] = '2'
comparison_op: compare "%2" with "=="
comparison_op: compare "%2" with "!="
comparison_op: compare "%2" with ">"
comparison_op: compare "%2" with "<"
comparison_op: compare "%2" with ">="
comparison_op: compare "%2" with "<="
comparison_op: failed, operator="%2"
comparison: failed
operation
function_call
cursor: 1 1 1
identifier
identifier: n
function_call: NULL
number
Error: number expected
identifier
identifier: n
comparison
function_call
cursor: 2 1 1
identifier
identifier: NULL
function_call: NULL
number
number: 2
comparison_op
buf[0] = ')'
buf[1] = '{'
comparison_op: compare "){" with "=="
comparison_op: compare "){" with "!="
comparison_op: compare "){" with ">"
comparison_op: compare "){" with "<"
comparison_op: compare "){" with ">="
comparison_op: compare "){" with "<="
comparison_op: failed, operator="){"
comparison: failed
operation
function_call
cursor: 2 1 1
identifier
identifier: NULL
function_call: NULL
number
number: 2
Error: left operand expected 3
function_call
cursor: 2 1 1
identifier
identifier: NULL
function_call: NULL
function_call
cursor: 2 1 1
identifier
identifier: NULL
function_call: NULL
number
number: 2
operation: %
cond_body
cond_lines
cursor 4 1 1 0
condition
if_condition
if_keyword
alpha_word
alpha_word: return
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: return
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: return
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: return
comparison
function_call
cursor: 0 2 6
identifier
identifier: NULL
function_call: NULL
number
number: 0
comparison_op
buf[0] = ';'
buf[1] = '}'
comparison_op: compare ";}" with "=="
comparison_op: compare ";}" with "!="
comparison_op: compare ";}" with ">"
comparison_op: compare ";}" with "<"
comparison_op: compare ";}" with ">="
comparison_op: compare ";}" with "<="
comparison_op: failed, operator=";}"
comparison: failed
operation
function_call
cursor: 0 2 6
identifier
identifier: NULL
function_call: NULL
number
number: 0
Error: left operand expected 3
function_call
cursor: 0 2 6
identifier
identifier: NULL
function_call: NULL
function_call
cursor: 0 2 6
identifier
identifier: NULL
function_call: NULL
number
number: 0
condition
if_condition
if_keyword
alpha_word
alpha_word: 
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: 
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: 
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: 
Error: return statement expected
variable_declaration
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
variable declaration after sequence
variable_declaration: NULL
variable_redeclaration
identifier
identifier: NULL
variable_redeclaration: NULL
function_call
cursor: 1 2 2
identifier
identifier: NULL
function_call: NULL
cond_lines: end, size: 1
maybe_else_condition
else_condition
else_keyword
alpha_word
alpha_word: return
maybe_else_condition: end
maybe_else_condition: res 0
no else block
if_boddy 5 1
condition
if_condition
if_keyword
alpha_word
alpha_word: return
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: return
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: return
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: return
comparison
function_call
cursor: 0 4 6
identifier
identifier: NULL
function_call: NULL
number
number: 1
comparison_op
buf[0] = ';'
buf[1] = '}'
comparison_op: compare ";}" with "=="
comparison_op: compare ";}" with "!="
comparison_op: compare ";}" with ">"
comparison_op: compare ";}" with "<"
comparison_op: compare ";}" with ">="
comparison_op: compare ";}" with "<="
comparison_op: failed, operator=";}"
comparison: failed
operation
function_call
cursor: 0 4 6
identifier
identifier: NULL
function_call: NULL
number
number: 1
Error: left operand expected 3
function_call
cursor: 0 4 6
identifier
identifier: NULL
function_call: NULL
function_call
cursor: 0 4 6
identifier
identifier: NULL
function_call: NULL
number
number: 1
condition
if_condition
if_keyword
alpha_word
alpha_word: 
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: 
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: 
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: 
Error: return statement expected
variable_declaration
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
variable declaration after sequence
variable_declaration: NULL
variable_redeclaration
identifier
identifier: NULL
variable_redeclaration: NULL
function_call
cursor: 1 4 2
identifier
identifier: NULL
function_call: NULL
function_decl success: isEven
function_decl
type
alpha_word
alpha_word: int
type: int
identifier
identifier: test
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
condition
if_condition
if_keyword
alpha_word
alpha_word: isEven
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: isEven
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: isEven
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: isEven
Error: return statement expected
variable_declaration
type
alpha_word
alpha_word: isEven
type: isEven
identifier
identifier: NULL
variable declaration after sequence
variable_declaration: NULL
variable_redeclaration
identifier
identifier: isEven
variable_redeclaration: NULL
function_call
cursor: 2 6 1
identifier
identifier: isEven
function_call_args
comparison
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
number
number: 1
comparison_op
buf[0] = ')'
buf[1] = ';'
comparison_op: compare ");" with "=="
comparison_op: compare ");" with "!="
comparison_op: compare ");" with ">"
comparison_op: compare ");" with "<"
comparison_op: compare ");" with ">="
comparison_op: compare ");" with "<="
comparison_op: failed, operator=");"
comparison: failed
operation
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
number
number: 1
Error: left operand expected 3
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
number
number: 1
comparison
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
number
number: 1
comparison_op
buf[0] = ')'
buf[1] = ';'
comparison_op: compare ");" with "=="
comparison_op: compare ");" with "!="
comparison_op: compare ");" with ">"
comparison_op: compare ");" with "<"
comparison_op: compare ");" with ">="
comparison_op: compare ");" with "<="
comparison_op: failed, operator=");"
comparison: failed
operation
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
number
number: 1
Error: left operand expected 3
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
function_call
cursor: 0 7 7
identifier
identifier: NULL
function_call: NULL
number
number: 1
function_call_args: SUCCESS
function_call: SUCCESS
condition
if_condition
if_keyword
alpha_word
alpha_word: return
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: return
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: return
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: return
comparison
function_call
cursor: 0 8 6
identifier
identifier: NULL
function_call: NULL
number
number: 0
comparison_op
buf[0] = ';'
buf[1] = '}'
comparison_op: compare ";}" with "=="
comparison_op: compare ";}" with "!="
comparison_op: compare ";}" with ">"
comparison_op: compare ";}" with "<"
comparison_op: compare ";}" with ">="
comparison_op: compare ";}" with "<="
comparison_op: failed, operator=";}"
comparison: failed
operation
function_call
cursor: 0 8 6
identifier
identifier: NULL
function_call: NULL
number
number: 0
Error: left operand expected 3
function_call
cursor: 0 8 6
identifier
identifier: NULL
function_call: NULL
function_call
cursor: 0 8 6
identifier
identifier: NULL
function_call: NULL
number
number: 0
condition
if_condition
if_keyword
alpha_word
alpha_word: 
if_keyword: not if
condition: no parsed
loop
while_keyword
alpha_word
alpha_word: 
while_keyword failed on strcmp
for_loop
for_keyword
alpha_word
alpha_word: 
for_keyword failed on strcmp
for_loop failed on parse
loop failed
ret
alpha_word
alpha_word: 
Error: return statement expected
variable_declaration
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
variable declaration after sequence
variable_declaration: NULL
variable_redeclaration
identifier
identifier: NULL
variable_redeclaration: NULL
function_call
cursor: 1 8 2
identifier
identifier: NULL
function_call: NULL
function_decl success: test
function_decl
type
alpha_word
alpha_word: 
type: 
identifier
identifier: NULL
function_decl failed, name is NULL
